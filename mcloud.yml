--- 
GENERATOR: 
  PackageName: mcloud
  PackageDescription: "Package mcloud provides Go bindings for MCloud mediator connection library"
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  FlagGroups:
    - {name: CFLAGS, traits: ["linux"], flags: [
      "-I/usr/include/libxml2"
    ]}
    - {name: LDFLAGS, flags: [
    "-L/opt/share/mcloud/lib",
    "-lMCloud",
    "-lxml2",
    "-laudioutils",
    "-lavcodec",
    "-lavformat",
    "-lavresample",
    "-lavutil",
    "-lgmp",
    "-lgnutls",
    "-lgnutls-xssl",
    "-lgnutlsxx",
    "-lhogweed",
    "-lnettle",
    "-lopus",
    "-lspeex"
    ]}
  Includes: ["MCloud.h", "Platform.h" ]
  Options:
    SafeStrings: true

PARSER: 
  IncludePaths: ["/usr/include", "/usr/include/libxml2", "/usr/lib/gcc/x86_64-linux-gnu/7/include/", "/usr/include/linux/"]
  SourcesPaths: ["mcloud/MCloud.h"]

TRANSLATOR: 
  ConstRules: 
    defines: expand
    enum: cgo
  TypeTips:
    function:
      - {target: "^mcloud", self: plain, tips: [plain,plain,plain,plain,plain]}
  PtrTips:
    function:
      - {target: "^mcloud", tips: [ref,0,0,0,0,0,0,0,0]}
  Rules: 
    global: 
      - {action: accept, from: "(?i)^mcloud"}
      - {action: accept, from: "(?i)^s2s_"}
    function:
      - {action: ignore, from: mcloudMsgHandler} # variadic
      - {action: ignore, from: mcloudSendBinaryFile} # FILE
      - {action: ignore, from: mcloudSendBinaryFileAsync} # FILE
      - {action: ignore, from: mcloudPacketGetBinary} # FILE
      - {transform: export}
    type: 
      - {action: replace, from: "_t$"}
    private:
      - {transform: unexport}
    post-global: 
      - {load: snakecase}
